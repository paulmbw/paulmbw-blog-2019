{"data":{"site":{"siteMetadata":{"title":"Paul Waweru","subtitle":"Software Engineer. Passion for travel and food. North London is Red. Navigating through this thing called life.","copyright":"¬© All rights reserved.","author":{"name":"Paul Waweru"},"disqusShortname":"","url":"https://lumen.netlify.com"}},"markdownRemark":{"id":"69397f5e-2d9c-52df-9130-661497000b0b","html":"<p><strong>GraphQL?</strong></p>\n<p>In order to understand what GraphQL is, we need to consider the issues presented with previous technologies (in this case RESTful API‚Äôs) and what this new language aims to solve.</p>\n<p>Traditional endpoints usually take the following structure (I will use the context of a book store):</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\">localhost<span class=\"token punctuation\">:</span><span class=\"token number\">8080</span><span class=\"token operator\">/</span>books<span class=\"token operator\">/</span><span class=\"token punctuation\">:</span>bookId</code></pre></div>\n<p>The result of calling a <code class=\"language-text\">GET</code> request to this endpoint may result in the following:</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token punctuation\">{</span>\n  <span class=\"token string\">\"title\"</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"The Kind Worth Killing\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token string\">\"genre\"</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"Thriller\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token string\">\"reviews\"</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"Amazing!\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"Brilliant!\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n  <span class=\"token string\">\"authorId\"</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"123\"</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>Great, we have information about the book titled <em>The Kind Worth Killing</em> (which btw, is an awesome book!).</p>\n<p>What if we wanted more information about the author? Easy, we would just call the following endpoint:</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\">localhost<span class=\"token punctuation\">:</span><span class=\"token number\">8080</span><span class=\"token operator\">/</span>authors<span class=\"token operator\">/</span><span class=\"token punctuation\">:</span>authorId</code></pre></div>\n<p>and we should get back the following result:</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token punctuation\">{</span>\n  <span class=\"token string\">\"authorName\"</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"Peter Swanson\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token string\">\"location\"</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"London, United Kingdom\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token string\">\"prizes\"</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"LA Times Book Award\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"New England Society Book Award\"</span><span class=\"token punctuation\">]</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>Awesome. Hmm, what if I wanted to get more information about other books written by Peter Swanson? Again, we would have to construct new new endpoint to return the desired information. Recognize a pattern here? As each endpoint corresponds to a single entity,  we have to build new endpoints if we require more information, which some may consider as resource-intensive or time consuming. This is where GraphQL comes in. </p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token punctuation\">{</span>\n  <span class=\"token function\">book</span><span class=\"token punctuation\">(</span>id<span class=\"token punctuation\">:</span><span class=\"token number\">123</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    title\n    genre\n    reviews\n    author <span class=\"token punctuation\">{</span>\n      name<span class=\"token punctuation\">,</span>\n      location<span class=\"token punctuation\">,</span>\n      prizes\n      books <span class=\"token punctuation\">{</span>\n        name\n      <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>This is all one HTTP request from Graphql, rather than sending <em>n</em> number of requests to gather the same information.</p>\n<p>The second problem GraphQL solves is it provides the ability to query only the information we need. For instance, if we didn‚Äôt care for the reviews of the books, location of the author, we would simply adjust our query </p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token punctuation\">{</span>\n  <span class=\"token function\">book</span><span class=\"token punctuation\">(</span>id<span class=\"token punctuation\">:</span><span class=\"token number\">123</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    title\n    genre\n    author <span class=\"token punctuation\">{</span>\n      name<span class=\"token punctuation\">,</span>\n      books <span class=\"token punctuation\">{</span>\n        name\n      <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>Here is the official definition from Wikipedia:</p>\n<blockquote>\n<p>GraphQL is an open-source data query and manipulation language for APIs, and a runtime for fulfilling queries with existing data.</p>\n</blockquote>\n<p>A query language used to communicate data between a client (i.e. the browser) and the server.</p>\n<p><strong>How to setup GraphQL</strong></p>","fields":{"tagSlugs":["/tags/learning/"]},"frontmatter":{"title":"Learning GraphQL üìà üôÖüèæ‚Äç‚ôÇÔ∏è","tags":["learning"],"date":"2018-12-27T23:46:37.121Z","description":"In this post I embark on a journey through understanding and demystifying Graphql for all you keen developers. Enjoy and comment!"}}},"pageContext":{"slug":"/posts/learning-graphql/"}}